                    位操作 - 维基百科，自由的百科全书
位操作
维基百科，自由的百科全书  跳转至： 导航、 搜索   Antistub.svg  	本条目需要扩充。 （2010年8月10日）
请协助改善这篇条目，更进一步的信息可能会在讨论页或扩充请求中找到。请在扩充条目后将此模板移除。 	
	本条目需要精通或熟悉本主题的领域的专业人士参与及协助编辑 （2010年8月10日）
请协助邀请适合的人士改善这篇条目。更多的细节与详情请参见条目讨论页。您可以关注您所擅长领域的专家关注分类。 	
  本页使用了标题或全文手工转换  位操作是程序设计中对位模式按位或二进制数的一元和二元操作. 在许多古老的微处理器上, 位运算比加减运算略快, 通常位运算比乘除法运算要快很多. 在现代架构中, 情况并非如此:位运算的运算速度通常与加法运算相同(仍然快于乘法运算).

目录
  •  1 位运算符 
  •  1.1 取反(NOT)
  •  1.2 按位或(OR)
  •  1.3 按位异或(XOR)
  •  1.4 按位与(AND)
  •  2 移位 
  •  2.1 算术移位
  •  2.2 逻辑移位
  •  2.3 C, C++ 和 Java中的移位
  •  3 应用

位运算符[编辑]
取反(NOT)[编辑]
取反是一元运算符, 对一个二进制数的每一位执行逻辑反操作. 使数字1成为0, 0成为1. 例如:

   NOT 0111 (十进制 7)
     = 1000 (十进制 8)
许多程序设计语言(包括C程序设计语言 family), 取反操作符用波浪线"~"表示. 值得注意的是此操作符与"逻辑非(!)" 操作符不同. 在C++中，逻辑非将数字整体看做一个布尔类型-- 将真值转化为假, 将假值转化为真; 而C语言将值1转化为0, 将非零值转化为0. "逻辑非"并不是一个位操作.
按位或(OR)[编辑]
按位或处理两个长度相同的二进制数, 两个相应的二进位中只要有一个为1, 该位的结果值为1. 例如

        0101 (十进制 5)
     OR 0011 (十进制 3)
      = 0111 (十进制 7)
在C类程序设计语言中, 按位或操作符是"|". 这一操作符需要与逻辑按位或运算符(||)区别开来.
按位或能够将每一位看做旗帜; 在二进制数中的每一位可以表示不同的布尔变量. 应用按位或操作可以将二进制数的某一位设为1.例如

0010 (十进制 2)
能够看做包含4个旗帜的组合. 第1,2,4旗帜为0; 第3个旗帜为1. 利用按位或可以将第1个旗帜设置为1, 而其他旗帜不变.

       0010 (十进制 2)
    OR 1000 (十进制 8)
     = 1010 (十进制 10)
这一技巧通常用来保存程序中的大量布尔变量.
按位异或(XOR)[编辑]
按位异或运算, 对等长二进制模式按位或二进制数的每一位执行逻辑异按位或操作. 操作的结果是如果某位不同则该位为1, 否则该位为0. 例如



         0101
     XOR 0011
       = 0110
在类C语言中, 按位异或运算符是 "^".
汇编语言的程序员们有时使用按位异或运算作为将寄存器的值设为 0 的捷径. 用值的自身对其执行按位异或运算将得到 0 . 并且在许多架构中, 与直接加载 0 值并将它保存到寄存器相比, 按位异或运算需要较少的中央处理单元时钟周期.

 按位异或也可以用于在比特集合中切换旗帜. 给出一个比特模式,

0010
第一和第三位能够通过按位异或运算使用同时切换.



         0010
     XOR 1010
       = 1000
这一技巧可用于操作表示布尔变量的比特模式.
按位与(AND)[编辑]
按位与处理两个长度相同的二进制数, 两个相应的二进位都为1, 该位的结果值才为1,否则为0. 例如:

         0101
     AND 0011
       = 0001
在类C语言中，按位与用'&'表示
移位[编辑]
移位是一个二元运算符，用来将一个二进制数中的每一位全部都向一个方向移动指定位，溢出的部分将被舍弃，而空缺的部分填入一定的值。在类C语言中，左移使用两个小于符号"<<"表示，右移使用两个大于符号">>"表示。
算术移位[编辑]
另见：:en:Arithmetic shift和:en:Arithmetic shift  Left arithmetic shift  Right arithmetic shift 

逻辑移位[编辑]
应用逻辑移位时，移位后空缺的部分全部填0.

       0001 (十进制 1)
 <<       3 (左移 3 位)
     = 1000 (十进制 8)

       1010 (十进制 10)
 >>       2 (右移 2 位)
     = 0010 (十进制 2)
C, C++ 和 Java中的移位[编辑]
JAVA中有一个特有的无符号右移操作符“>>>”。此操作将忽略操作数的符号 同样的还有>>>=
应用[编辑]
 取自“http://zh.wikipedia.org/w/index.php?title=位操作&oldid=26489481” 分类：  •  自2010年8月需要专业人士关注的页面
  •  计算机算术
  •  程序架构
  •  布尔代数
隐藏分类：  •  自2010年8月扩充中的条目
  •  模板中使用无效日期参数的条目
导航菜单
个人工具
  •  创建新账户
  •  登录
名字空间
  •  条目
  •  讨论
 大陆简体 
变种
  •  不转换
  •  简体
  •  繁體
  •  大陆简体
  •  香港繁體
  •  澳門繁體
  •  马新简体
  •  台灣正體
查看
  •  阅读
  •  编辑
  •  查看历史
操作
搜索
  搜索    Special:搜索  导航
  •  首页
  •  分类索引
  •  特色内容
  •  新闻动态
  •  最近更改
  •  随机条目
帮助
  •  帮助
  •  社区专页
  •  方针与指引
  •  互助客栈
  •  询问处
  •  字词转换
  •  IRC即时聊天
  •  联系我们
  •  关于维基百科
  •  资助维基百科
工具
  •  链入页面
  •  相关更改
  •  上传文件
  •  特殊页面
  •  打印版本
  •  永久链接
  •  页面信息
  •  数据项
  •  引用本页
其他语言
  •  Български
  •  Català
  •  Čeština
  •  Deutsch
  •  English
  •  Esperanto
  •  Español
  •  فارسی
  •  Français
  •  Italiano
  •  日本語
  •  한국어
  •  Latviešu
  •  Bahasa Melayu
  •  Mirandés
  •  Polski
  •  Português
  •  Русский
  •  Simple English
  •  Українська
  •  Tiếng Việt
  •  
  •  编辑链接
  •   本页面最后修订于2013年5月10日 (星期五) 03:07。

  •  本站的全部文字在知识共享 署名-相同方式共享 3.0协议之条款下提供，附加条款亦可能应用。（请参阅使用条款）
 Wikipedia®和维基百科标志是维基媒体基金会的注册商标；维基™是维基媒体基金会的商标。
维基媒体基金会是在美国佛罗里达州登记的501(c)(3)免税、非营利、慈善机构。

  •  隐私权政策
  •  关于维基百科
  •  免责声明
  •  开发者
  •  移动版视图
  •     Wikimedia Foundation  
  •     Powered by MediaWiki  
    