                    Apache Lucene - Welcome to Apache Lucene
  Lucene Logo  TM   Search with Apache Solr...  @ select provider Lucid Find Search-Lucene   •  Core (Java)
  •  Solr
  •  PyLucene
  •  Open Relevance
 Ultra-fast Search Library and Server
 Apache Lucene and Solr set the standard for search and indexing performance   Apache Lucene   Proven search capabilities
 Our core algorithms along with the Solr search server power applications the world over, ranging from mobile devices to sites like Twitter, Apple and Wikipedia.   Lucene Power   Large, Vibrant community  The goal of Apache Lucene and Solr is to provide world class search capabilities   Apache Mahout community   Apache 2.0 licensed  Apache Lucene and Solr are distributed under a commercially friendly Apache Software license   Apache Software Foundation  Next Previous Start Stop Welcome to Apache Lucene
The Apache LuceneTM project develops open-source search software, including:
  •  Lucene Core, our flagship sub-project, provides Java-based indexing and search technology, as well as spellchecking, hit highlighting and advanced analysis/tokenization capabilities.
  •  SolrTM is a high performance search server built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.
  •  Open Relevance Project is a subproject with the aim of collecting and distributing free materials for relevance testing and performance.
  •  PyLucene is a Python port of the Core project.
LuceneTM News
24 November 2013 - Apache Lucene 4.6.0 and Apache SolrTM 4.6.0 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.6.0 and Apache Solr 4.6.0.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
Both releases contain a number of bug fixes.
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
24 October 2013 - Apache Lucene 4.5.1 and Apache SolrTM 4.5.1 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.5.1 and Apache Solr 4.5.1.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
Both releases contain a number of bug fixes.
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
5 October 2013 - Apache Lucene 4.5 and Apache SolrTM 4.5 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.5 and Apache Solr 4.5.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
Highlights of the Lucene release include:
  •   
Added support for missing values to DocValues fields through AtomicReader.getDocsWithField.
  •   
Lucene 4.5 has a new Lucene45Codec with Lucene45DocValues, supporting missing values and with most datastructures residing off-heap.
  •   
New in-memory DocIdSet implementations which are especially better than FixedBitSet on small sets: WAH8DocIdSet, PFORDeltaDocIdSet and EliasFanoDocIdSet.
  •   
CachingWrapperFilter now caches filters with WAH8DocIdSet by default, which has the same memory usage as FixedBitSet in the worst case but is smaller and faster on small sets.
  •   
TokenStreams now set the position increment in end(), so we can handle trailing holes.
  •   
IndexWriter no longer clones the given IndexWriterConfig.
Lucene 4.5 also includes numerous optimizations and bugfixes.
Highlights of the Solr release include:
  •   
Custom sharding support, including the ability to shard by field.
  •   
DocValue improvements: single valued fields no longer require a default value, allowiing dynamicFields to contain doc values, as well as sortMissingFirst and sortMissingLast on docValue fields.
  •   
Ability to store solr.xml in ZooKeeper.
  •   
Multithreaded faceting.
  •   
CloudSolrServer can now route updates directly to the appropriate shard leader.
Solr 4.5 also includes numerous optimizations and bugfixes.
29 July 2013 - Apache Solr Reference Guide 4.4 Available
The Lucene PMC is pleased to announce the release of the Apache Solr Reference Guide for Solr 4.4.
This 431 page PDF serves as the definitive users manual for Solr 4.4. As the first document of it's kind released by the Lucene project, this release demonstrates a major milestone in the growth and evolution of Apache Solr.
The Solr Reference Guide is available for download from the Apache mirror network:
https://www.apache.org/dyn/closer.cgi/lucene/solr/ref-guide/
23 July 2013 - Apache Lucene 4.4 and Apache SolrTM 4.4 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.4 and Apache Solr 4.4.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
Highlights of the Lucene release include:
  •   
New Replicator module: replicate index revisions between server and client. See http://shaierera.blogspot.com/2013/05/the-replicator.html
  •   
New AnalyzingInfixSuggester: finds suggestions based on matches to any tokens in the suggestion, not just based on pure prefix matching. See http://blog.mikemccandless.com/2013/06/a-new-lucene-suggester-based-on-infix.html
  •   
New PatternCaptureGroupTokenFilter: emit multiple tokens, one for each capture group in one or more Java regexes.
  •   
New Lucene Facet module features: 
  •  Added dynamic (no taxonomy index used) numeric range faceting (see http://blog.mikemccandless.com/2013/05/dynamic-faceting-with-lucene.html )
  •  Arbitrary Querys are now allowed for per-dimension drill-down on DrillDownQuery and DrillSideways, to support future dynamic faceting.
  •  New FacetResult.mergeHierarchies: merge multiple FacetResult of the same dimension into a single one with the reconstructed hierarchy.
  •   
FST's Builder can now handle more than 2.1 billion "tail nodes" while building a minimal FST.
  •   
FieldCache Ints and Longs now use bit-packing to save memory. String fields have more efficient compression if there are many unique terms.
  •   
Improved compression for NumericDocValues for dates and fields with very small numbers of unique values.
  •   
New IndexWriter.hasUncommittedChanges(): returns true if there are changes that have not been committed.
  •   
multiValuedSeparator in PostingsHighlighter is now configurable, for cases where you want a different logical separator between field values.
  •   
NorwegianLightStemFilter and NorwegianMinimalStemFilter have been extended to handle "nynorsk".
  •   
New ScandinavianFoldingFilter and ScandinavianNormalizationFilter.
  •   
Easier compressed norms: Lucene42NormsFormat now takes an overhead parameter, allowing for values other than PackedInts.FASTEST.
  •   
Analyzer now has an additional tokenStream(String fieldName, String text) method, so wrapping by StringReader for common use is no longer needed.
  •   
New SimpleMergedSegmentWarmer: just ensures that data structures (terms, norms, docvalues, etc.) are initialized.
  •   
IndexWriter flushes segments to the compound file format by default.
Lucene 4.4 also includes numerous optimizations and bugfixes.
Highlights of the Solr release include:
  •   
Solr indexes and transaction logs may stored in HDFS with full read/write capability.
  •   
Schemaless mode: Added support for a mode that requires no up-front schema modifications, in which previously unknown fields' types are guessed based on the values in added/updated documents, and are then added to the schema prior to processing the update. Note that the below-described features are also useful independently from schemaless mode operation. 
  •  New Parse{Date,Integer,Long,Float,Double,Boolean}UpdateProcessorFactory classes parse/guess the field value class for String-valued and unknown fields.
  •  New AddSchemaFieldsUpdateProcessor: Automatically add new fields to the schema when adding/updating documents with unknown fields. Custom rules map field value class(es) to schema fieldTypes.
  •  A new schemaless mode example configuration, using the above-described field-value-class-guessing and unknown-field-schema-addition features, is provided at solr/example/example-schemaless/.
  •   
Core Discovery mode: A new solr.xml format which does not store core information, but instead searches for files named 'core.properties' in the filesystem which tell Solr all the details about that core. The main example and the schemaless example both use this new format.
  •   
Schema REST API: Add support for creating copy fields.
  •   
A merged segment warmer may now be plugged into solrconfig.xml. 
  •   
New MaxScoreQParserPlugin: Return max() instead of sum() of terms.
  •   
Binary files are now supported in ZooKeeper.
  •   
SolrJ's SolrPing object has new methods for ping, enable, and disable.
  •   
The Admin UI now supports adding documents to Solr.
  •   
Added a PUT command to the Solr ZkCli tool.
  •   
New "deleteshard" collections API that unloads all replicas of a given shard and then removes it from the cluster state. It will remove only those shards which are INACTIVE or have no range.
  •   
The Overseer can now optionally assign generic node names so that new addresses can host shards without naming confusion.
  •   
The CSV Update Handler now supports optionally adding the line number/ row id to a document.
  •   
Added a new system wide info admin handler that exposes the system info that could previously only be retrieved using a SolrCore.
Solr 4.4 also includes numerous optimizations and bugfixes.
18 June 2013 - Apache Lucene 4.3.1 and Apache Solr 4.3.1 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.3.1 and Apache Solr 4.3.1.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
Highlights of the Lucene release include:
  •  Lucene 4.3.1 includes 12 bug fixes and 1 optimization, including fixes for a serious bug that can cause deadlock.
Highlights of the Solr release include:
  •   
Solr 4.3.1 includes 24 bug fixes. The list includes a lot of SolrCloud bug fixes around Shard Splitting as well as some fixes in other areas.
  •   
Lucene 4.3.1 bug fixes and optimizations.
6 May 2013 - Apache Lucene 4.3.0 and Apache SolrTM 4.3.0 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.3.0 and Apache Solr 4.3.0.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
Highlights of the Lucene release include:
  •   
Significant performance improvements for minShouldMatch BooleanQuery due to skipping resulting in up to 4000% faster queries.
  •   
A new SortingAtomicReader which allows sorting an index based on a sort criteria (e.g. a numeric DocValues field), as well as SortingMergePolicy which sorts documents before segments are merged.
  •   
DocIdSetIterator and Scorer now has a cost API that provides an upper bound of the number of documents the iterator might match. This API allows optimisation during query execution or how filters are applied.
  •   
Analyzing/FuzzySuggester now allow to record arbitrary byte[] as a payload. The suggesters also use an ending offset to determine whether the last token was finished or not, so that a query "i " will no longer suggest "Isla de Muerta" for example.
  •   
Lucene Spatial Module can now search for indexed shapes by Within, Contains, and Disjoint relationships, in addition to typical Intersects.
  •   
PostingsHighlighter now allows custom passage scores, per-field BreakIterators and has been detached from TopDocs. Additionally, subclasses can override where string values for highlighting are pulled from alternatively to stored fields.
  •   
New SearcherTaxonomyManager manages near-real-time reopens of both IndexSearcher and TaxonomyReader (for faceting).
  •   
Added new facet method to the facet module to compute facet counts using SortedSetDocValuesField, without a separate taxonomy index.
  •   
DrillSideways class, for computing sideways facet counts, is now more flexible: it allows more than one FacetRequest per dimension and now allows drilling down on dimensions that do not have a facet request.
  •   
Various bugfixes and optimizations since the 4.2.1 release.
Highlights of the Solr release include:
  •   
Tired of maintaining core information in solr.xml? Now you can configure Solr to automatically find cores by walking an arbitrary directory.
  •   
Shard Splitting: You can now split SolrCloud shards to expand your cluster as you grow.
  •   
The read side schema REST API has been improved and expanded upon: all schema information is now available and the full live schema can now be returned in json or xml. Ground work is included for the upcoming write side of the schema REST API.
  •   
Spatial queries can now search for indexed shapes by "IsWithin", "Contains" and "IsDisjointTo" relationships, in addition to typical "Intersects".
  •   
Faceting now supports local parameters for faceting on the same field with different options.
  •   
Significant performance improvements for minShouldMatch (mm) queries due to skipping resulting in up to 4000% faster queries.
  •   
Various new highlighting configuration parameters.
  •   
A new solr.xml format that is closer to that of solrconfig.xml. The example still uses the old format, but 4.4 will ship with the new format.
  •   
Lucene 4.3.0 bug fixes and optimizations.
Solr 4.3.0 also includes many other new features as well as numerous optimizations and bugfixes.
3 April 2013 - Apache Lucene 4.2.1 and Apache SolrTM 4.2.1 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.2.1 and Apache Solr 4.2.1.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
Highlights of the Lucene release include:
  •  Lucene 4.2.1 includes 9 bug fixes and 3 optimizations, including a fix for a serious bug that could result in the loss of an index.
Highlights of the Solr release include:
  •   
Solr 4.2.1 includes 38 bug fixes and 2 optimizations. The list includes a lot of SolrCloud bug fixes around the Collections API as well as many fixes around Directory management. There are many fixes in other areas as well.
  •   
Lucene 4.2.1 bug fixes and optimizations.
11 March 2013 - Apache Lucene 4.2 and Apache SolrTM 4.2 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.2 and Apache Solr 4.2.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
Highlights of the Lucene release include:
  •   
Lucene 4.2 has a new default codec (Lucene42Codec) with a more efficient docvalues format (sorted bytes in FST, less addressing overhead, improved numeric compression) and smaller term vectors (LZ4-compressed terms dictionaries and payloads, delta-encoded positions and offsets using blocks of packed integers).
  •   
Doc values external and codec API and implementations have been simplified: the codec is no longer responsible for buffering doc values; the numerous types have been consolidated down to only three (NUMERIC, BINARY, SORTED); PerFieldDocValuesFormat lets you set a different format for each field, and the doc values and FieldCache APIs were unified.
  •   
Significant refactoring and performance enhancements to the facet module, resulting in overall ~3.8X speedup in one case (single Date field faceting).
  •   
DrillDownQuery in the facet module now supports multi-select.
  •   
A new DrillSideways class enables counting facet labels and counts for both hits and near-misses in a single query. See http://blog.mikemccandless.com/2013/02/drill-sideways-faceting-with-lucene.html
  •   
An additional docvalues type (SORTED_SET) was added that supports multiple values.
  •   
FSTs are a bit smaller, and the FST package supports FSTs over 2GB in size.
  •   
A new LiveFieldValues class lets you get live or real-time values for any indexed doc / field. See http://blog.mikemccandless.com/2013/01/getting-real-time-field-values-in-lucene.html
  •   
Added a new classification module.
  •   
Various bugfixes and optimizations since the 4.1 release.
Highlights of the Solr release include:
  •   
A read side REST API for the schema. Always wanted to introspect the schema over http? Now you can. Looks like the write side will be coming next.
  •   
DocValues have been integrated into Solr. DocValues can be loaded up a lot faster than the field cache and can also use different compression algorithms as well as in RAM or on Disk representations. Faceting, sorting, and function queries all get to benefit. How about the OS handling faceting and sorting caches off heap? No more tuning 60 gigabyte heaps? How about a snappy new per segment DocValues faceting method? Improved numeric faceting? Sweet.
  •   
Collection Aliasing. Got time based data? Want to re-index in a temporary collection and then swap it into production? Done. Stay tuned for Shard Aliasing.
  •   
Collection API responses. The collections API was still very new in 4.0, and while it improved a fair bit in 4.1, responses were certainly needed, but missed the cut off. Initially, we made the decision to make the Collection API super fault tolerant, which made responses tougher to do. No one wants to hunt through logs files to see how things turned out. Done in 4.2.
  •   
Interact with any collection on any node. Until 4.2, you could only interact with a node in your cluster if it hosted at least one replica of the collection you wanted to query/update. No longer - query any node, whether it has a piece of your intended collection or not and get a proxied response.
  •   
Allow custom shard names so that new host addresses can take over for retired shards. Working on Amazon without elastic ips? This is for you.
  •   
Lucene 4.2 optimizations such as compressed term vectors.
Solr 4.2 also includes many other new features as well as numerous optimizations and bugfixes.
22 January 2013 - Apache Lucene 4.1 and Apache SolrTM 4.1 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.1 and Apache Solr 4.1.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
See the Lucene CHANGES.txt and Solr CHANGES.txt files included with the release for a full list of details.
Highlights of the Lucene release include:
  •   
Lucene 4.1 has a new default codec (Lucene41Codec) based on the previously-experimental "Block" indexing format for improved performance, but also incorporating the functionality of "Appending" and "Pulsing".
  •   
The default codec incorporates the optimization of Pulsing: terms that appear in only one document (such as primary key/id fields) just store the document id in the term dictionary instead of a pointer to this document id in a separate file.
  •   
The default codec incorporates an efficient compressed stored fields implementation that compresses chunks of documents together with LZ4. (see http://blog.jpountz.net/post/33247161884/efficient-compressed-stored-fields-with-lucene)
  •   
Lucene no longer seeks when writing files (all fields are written in an append-only way). This means it works by default with append-only streams, hdfs, etc.
  •   
New suggest implementations: AnalyzingSuggester, where the underlying form (computed from a lucene Analyzer) used for suggestions is separate from the returned text (see http://blog.mikemccandless.com/2012/09/lucenes-new-analyzing-suggester.html), and FuzzySuggester, which additionally allows for inexact matching on the input.
  •   
Near-realtime support was added to the facet module. (see http://shaierera.blogspot.com/2012/11/lucene-facets-part-1.html)
  •   
New Highlighter (postingshighlighter) added to the highlighter module. (see http://blog.mikemccandless.com/2012/12/a-new-lucene-highlighter-is-born.html)
  •   
Added FilterStrategy to FilteredQuery for more flexibility in filtered query execution.
  •   
Added CommonTermsQuery to speed up queries with very highly frequent terms. Term frequencies are efficiently detected at query time - no index time preparation required.
  •   
Several bugfixes and optimizations since the 4.0 release.
Highlights of the Solr release include:
SolrCloud enhancements (see http://wiki.apache.org/solr/SolrCloud):
  •  Simple multi-tenancy through enhanced document routing: 
  •  The "compositeId" router is the default for collections with hash based routing (i.e. when numShards=N is specified on collection creation).
  •  Documents with ids sharing the same domain/prefix, e.g. 'customerB!', will be routed to the same shard, allowing for efficient querying. At query time, one can specify a "shard.keys" parameter that lists the domains, e.g. 'shard.keys=customerB!', and controls what shards the query is routed to.
  •  Collections that do not specify numShards at collection creation time use custom sharding and default to the "implicit" router. Document updates received by a shard will be indexed to that shard, unless a "shard" parameter or document field names a different shard.
  •  Short circuiting for distributed search if a request only needs to query a single shard.
  •  Allow creating more than one shard per instance with the Collection API.
  •  Allow access to the collections API through CloudSolrServer without referencing an existing collection.
  •  Collection API: Support for specifying a list of Solr addresses to spread a new collection across.
  •  New and improved auto host detection strategy.
  •  Numerous bug fixes and general hardening - it's recommended that all Solr 4.0 SolrCloud users upgrade to 4.1.
New features:
  •  The majority of Solr's features, including replication, now work with custom Directory and DirectoryFactory implementations.
  •  Indexed term offsets, specifiable via a 'storeOffsetsWithPositions' flag on field definitions in the schema. Useful for highlighters.
  •  Solr QParsers may now be directly invoked in the lucene query syntax via localParams and without the query magic field hack. Example: foo AND {!term f=myfield v=$qq}
  •  Solr now parses request parameters (from URL or sent with POST using content-type application/x-www-form-urlencoded) in its dispatcher code. It no longer relies on special configuration settings in Tomcat or other web containers to enable UTF-8 encoding, which is mandatory for correct Solr behaviour. Solr now works out of the box with e.g. Tomcat, JBoss,...
  •  Directory IO rate limiting based on the IO context.
  •  Distributed search support for MoreLikeThis.
  •  Multi-core: On-demand core loading and LRU-based core unloading after reaching a user-specified maximum number.
  •  The new Solr 4 spatial fields now work with the {!geofilt} and {!bbox} query parsers. The score local-param works too.
  •  Extra statistics to RequestHandlers - 5 & 15-minute reqs/sec rolling averages; median, 75th, 95th, 99th, 99.9th percentile request times.
  •  PostingsHighlighter support (see http://blog.mikemccandless.com/2012/12/a-new-lucene-highlighter-is-born.html) 
Admin UI improvements:
  •  Internet Explorer is now supported
  •  Enhanced readability of XML query response display in Query UI
  •  Many improvements to DataImportHandler UI
  •  Core creation and deletion now updates the main/left list of cores
  •  Admin Cores UI now redirects to newly created core details
  •  Deleted documents are calculated/displayed
  •  Allow multiple Items to stay open on Plugins-Page 
Storage improvements (thanks to the new Lucene 4.1 codec):
  •  Faster search, in particular for rare terms such as primary key/id fields.
  •  Stored fields are compressed. (See http://blog.jpountz.net/post/33247161884/efficient-compressed-stored-fields-with-lucene)
DataImportHandler contrib module backwards-compatibility breaks:
  •  These default to the "root" Locale, rather than the JVM default locale as before. 
  •  NumberFormatTransformer & DateFormatTransformer
  •  "formatDate" evaluator 
  •  "dataimport.properties" file "last_index_time" property
  •  These default to UTF-8 encoding, rather than the JVM default encoding as before. 
  •  FileDataSource & FieldReaderDataSource 
  •  These may require code changes to custom plug-ins 
  •  The EvaluatorBag class was eliminated and its public/protected methods were moved to the Evaluator abstract class.
  •  The experimental DIHPropertiesWriter interface was renamed DIHProperties, changed to an abstract class and given new signature.
Solr 4.1 also includes numerous optimizations and bugfixes.
25 December 2012 - Apache Lucene 3.6.2 and Apache Solr 3.6.2 available
The Lucene PMC is pleased to announce the availability of Apache Lucene 3.6.2 and Apache Solr 3.6.2.
This release is a bug fix release for version 3.6.1. It contains numerous bug fixes, optimizations, and improvements, some of which are highlighted below.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-3x-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-3x-redir.html
See the CHANGES.txt file included with the release for a full list of details.
Lucene 3.6.2 Release Highlights:
  •   
Fixed ArrayIndexOutOfBoundsException when the in-memory terms index requires more than 2.1GB of RAM (billions of terms).
  •   
Fixed a bug in contrib/queryparser's parsing of boolean queries.
  •   
Fixed BooleanScorer2 to return the correct freq() when using the scorer visitor API.
  •   
Fixed IndexWriter RAM accounting bug that would cause it to flush too early when using many different field names.
  •   
Several other minor bugfixes: scoring bugs when using a custom coord(), a rare IndexWriter thread-safety issue, and fixes to the faceting and highlighting modules.
Solr 3.6.2 Release Highlights:
  •   
Fixed ConcurrentModificationException during highlighting, if all fields were requested.
  •   
Fixed edismax queryparser to apply minShouldMatch to implicit boolean queries.
  •   
Several bugfixes to the DataImportHandler.
  •   
Bug fixes from Apache Lucene 3.6.2.
12 October 2012 - Lucene Core 4.0 and Solr 4.0 Available
The Lucene PMC is pleased to announce the availability of Apache Lucene 4.0 and Apache Solr 4.0.
Lucene can be downloaded from http://lucene.apache.org/core/mirrors-core-latest-redir.html and Solr can be downloaded from http://lucene.apache.org/solr/mirrors-solr-latest-redir.html
Noteworthy changes since Lucene 4.0-BETA:
  •  A new "Block" PostingsFormat offering improved search performance and index compression. This will likely become the default format in a future release.
  •  All non-default codec implementations were moved to a separated codecs module. Just add lucene-codecs-4.0.0.jar to your classpath to test these out.
  •  Payloads can be optionally stored on the term vectors.
  •  Many bugfixes and optimizations.
Noteworthy changes since Solr 4.0-BETA:
  •  New spatial field types with polygon support.
  •  Various Admin UI improvements.
  •  SolrCloud related performance optimizations in writing the the transaction log, PeerSync recovery, Leader election, and ClusterState caching.
  •  Numerous bug fixes and optimizations.
The Apache Software Foundation
The Apache Software Foundation provides support for the Apache community of open-source software projects. The Apache projects are defined by collaborative consensus based processes, an open, pragmatic software license and a desire to create high quality software that leads the way in its field. Apache Lucene, Apache Solr, Apache PyLucene, Apache Open Relevance Project and their respective logos are trademarks of The Apache Software Foundation. All other marks mentioned may be trademarks or registered trademarks of their respective owners.
Download Click to begin of Apache Lucene 4.6.0 Apache Lucene 4.6.0 Download Click to begin of Apache Solr 4.6.0 Apache Solr 4.6.0
Projects
  •  Lucene Core (Java)
  •  Solr
  •  PyLucene
  •  Open Relevance
About
  •  License
  •  Who We are
ASF links
  •  Apache Software Foundation
  •  Thanks
  •  Become a Sponsor
  •  Security
Editing This Site
  •  Instructions
  •  ASF CMS
  •  ASF CMS Reference/FAQ
  •  Markdown
Related Projects
  •  Apache Hadoop
  •  Apache ManifoldCF
  •  Apache Lucene.Net
  •  Apache Lucy
  •  Apache Mahout
  •  Apache Nutch
  •  Apache OpenNLP
  •  Apache Tika
  •  Apache Zookeeper
 Copyright © 2011-2012 The Apache Software Foundation, Licensed under the Apache License, Version 2.0. Privacy Policy 
 Apache and the Apache feather logo are trademarks of The Apache Software Foundation. Apache Lucene, Apache Solr and their respective logos are trademarks of the Apache Software Foundation. Please see the Apache Trademark Policy for more information. 
   